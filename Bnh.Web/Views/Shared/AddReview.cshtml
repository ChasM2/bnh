@model Review

@section Scripts {
    <script>require(["review-add"])</script>
}

@{
    ViewBag.Title = "Add " + ViewBag.CommunityName + " Review";
    var ratings = Enumerable.Range(0, 11).Select(i => new { name = i.ToString(), value = i });
    var questions = (ViewBag.Questions as IEnumerable<KeyValuePair<string, string>>).ToArray();
}

<div class="row">
    <div class="span12">
        @using (Html.BeginForm("AddReview", attributes: new { @class = "form-horizontal" })) 
        {
            @Html.HiddenFor(m => m.TargetId);
            
            <fieldset>
                <legend>Rate @ViewBag.CommunityName community</legend>

                @for (int i = 0; i < questions.Length; i ++)
                {
                    var question = questions[i];
                    <div class="control-group">
                        <label class="control-label">@question.Value</label>
                        <div class="controls">
                            @Html.Hidden("ratings[" + i + "].key", question.Key)
                            @Html.DropDownList("ratings[" + i + "].value", new SelectList(ratings, "value", "name"), "")
                        </div>
                    </div>
                }

            </fieldset>
            
            <fieldset>
                <legend>Leave @ViewBag.CommunityName review</legend>

                <div class="control-group">
                    <label class="control-label">Review</label>
                    <div class="controls">
                        @Html.TextAreaFor(m => m.Message)
                    </div>
                </div>
            </fieldset>

            <div class="form-actions">
                <span class="alter"><input type="submit" value="Create" class="btn btn-danger" /></span>
                @Html.ActionInputLink("Cancel", "Reviews", attributes: new { @class = "btn"})
            </div>
        }
    </div>
</div>
