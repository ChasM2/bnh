@using Bnh.Web.Models
@using Bnh.Entities

@model Pager<Review>

@helper RenderPagerControls()
{
    Func<Pager<Review>.Link, string> classResolver = (link) =>
        (link.Active && link.Numeric) ? "active page" :
        link.Numeric ? "page" : "";
    
    if(Model.NumberOfPages > 1)
    {
        <div class="pager">
        @foreach(var link in Model.Links)
        {
            if(link.Disabled || link.Active)
            {
                @Html.Label(link.Text, new { @class = classResolver(link) })
            }
            else
            {
                @Html.ActionLink(link.Text, link.Action, new { id = ViewBag.CommunityUrlId, page = link.PageIndex + 1 }, new { @class = classResolver(link) })
            }
        }
        </div>
    }
}

@{
    ViewBag.Title = ViewBag.CommunityName + " Reviews";
}

<h2>@ViewBag.CommunityName Reviews</h2>

@*TODO: if user has already added a review, then don't show "add review" link*@
@Html.ActionLink("Add review", "AddReview", new { id = ViewBag.CommunityUrlId })

@RenderPagerControls()

@foreach (var review in Model.PageItems)
{
    <div id="@review.ReviewId">
        <section>
            @MvcHtmlString.Create(review.Message)
        </section>
        <section>
            by @review.UserName at @review.Created
        </section>
    </div>
}

@RenderPagerControls()