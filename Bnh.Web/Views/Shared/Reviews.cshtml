@using Bnh.Web.Models
@using Bnh.Core.Entities

@model Pager<Review>

@helper RenderPagerControls()
{
    Func<Pager<Review>.Link, string> classResolver = (link) =>
        (link.Active && link.Numeric) ? "active page" :
        link.Numeric ? "page" : "";
    
    if(Model.NumberOfPages > 1)
    {
        <div class="pager">
        @foreach(var link in Model.Links)
        {
            if(link.Disabled || link.Active)
            {
                @Html.Label(link.Text, new { @class = classResolver(link) })
            }
            else
            {
                @Html.ActionLink(link.Text, link.Action, new { id = ViewBag.CommunityUrlId, page = link.PageIndex + 1 }, new { @class = classResolver(link) })
            }
        }
        </div>
    }
}

@section Styles
{
    <link href="@Url.Content("~/Styles/Review.css")" rel="stylesheet" type="text/css" />
}

@section Scripts {
    <script>require(["review-index"])</script>
}

@{
    ViewBag.Title = ViewBag.CommunityName + " Reviews";
}

<h2>@ViewBag.CommunityName Reviews</h2>

@*TODO: if user has already added a review, then don't show "add review" link*@
@Html.ActionLink("Add review", "AddReview", new { id = ViewBag.CommunityUrlId })

<h1>Rating: @(ViewBag.Rating ?? "Not rated")</h1>

@RenderPagerControls()

@foreach (var review in Model.PageItems)
{
    <div id="@review.ReviewId" class="review">
        <section class="rating">
            @foreach(KeyValuePair<string, string> question in ViewBag.Questions)
            {
                <div>
                    <label>@(question.Value):</label>
                    <span>@review.Ratings[question.Key]</span>
                </div>
            }
        </section>
        <section class="message">
            @MvcHtmlString.Create(review.Message)
        </section>
        <section class="user">
            by @review.UserName at @review.Created.ToLocalTime()
        </section>
        @if (Context.User.IsInRole("content_manager"))
        {
        <sup class="alter delete">@Html.ActionLink("x", "DeleteReview", null, new { title = "Delete", reviewid = review.ReviewId })</sup>
        }
    </div>
}

@RenderPagerControls()